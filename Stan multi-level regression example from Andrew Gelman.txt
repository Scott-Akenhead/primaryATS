Andrew Gelman 	10 Apr Hi, I want to fit a varying-intercept, varying-slope multilevel model estimating a covariance matrix for the coefficients. 
Rob Trangucci 	10 Apr
The right way to do it is on page 61 (data declaration block) and 64 (optimized code) in the manual:
data {
  int<lower=0> N; // num individuals
  int<lower=1> K; // num ind predictors
  int<lower=1> J; // num groups
  int<lower=1> L; // num group predictors
  int<lower=1,upper=J> jj[N]; // group for individual
  matrix[N,K] x; // individual predictors
  matrix[J,L] u; // group predictors
  vector[N] y; // outcomes
}
parameters {
  matrix[K,J] z;
  cholesky_factor_corr[K] L_Omega;
  vector<lower=0>[K] tau; // prior scale
  matrix[L,K] gamma; // group coeffs
  real<lower=0> sigma; // prediction error scale
}
transformed parameters {
  matrix[J,K] beta;
  beta <- u * gamma + (diag_pre_multiply(tau,L_Omega) * z)';
}
model {
  vector[N] x_beta_jj;
  // vectorized likelihood on page 62
  for (n in 1:N)
    x_beta_jj[n] <- x[n] * beta[jj[n]];
  y ~ normal(x_beta_jj, sigma);

  L_Omega ~ lkj_corr_cholesky(2);
  tau ~ cauchy(0,2.5);
  to_vector(z) ~ normal(0,1);
  to_vector(gamma) ~ normal(0,5);
}